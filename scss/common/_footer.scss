#footer {
	// width: 100%;
	// padding: 100px 0;
	// background-color: #000000;
	// color: #fff;
	// .inner {
	// 	width: 1180px;
	// 	margin: 0 auto;
	// 	div {
	// 		width: 100%;
	// 		display: flex;
	// 		padding: 10px 20px;
	// 		span {
	// 			flex: 1;
	// 			font: bold 9px/1 'arial';
	// 		}
	// 	}
	// }
	.inner {
		width: 1180px;
		height: 230px;
		margin: 0 auto;
		padding: 50px 0px 0px;
		border-top: 2px solid #6e6d6d;
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> div {
			//div안에 있는 div를 선택하지 않기 위해 >를 사용한다.
			//div안에있는 공통인 요소인 h2, ul, p요소를 선택하기 위해 사용한다.
			h2 {
				font-size: 14px;
				font-weight: 400;
				//100~900 폰트 굵기 설정
				margin-bottom: 10px;
			}

			ul {
				li {
					float: left;
					margin-right: 25px;
				}
			}
			p {
				font-size: 12.5px;
				color: #9a9a9a;
				margin-bottom: 15px;
			}

			// &.footer_menu {
			// 	&::after {
			// 		font: 11px;
			// 	}
			// }
			// &.footer_menu {
			// 	font: 12px;
			// }
			// &::before {
			// 	font: 13px;
			// }

			//&.footer_menu와 .footer_menu는 서로 다르기 때문에 일치할 수 없다.
			//.footer_menu는 공백이 생기고
			//&.footer_menu는 공백이 생기지 않기 때문이다.
			//.footer_menu는 div의 자식요소를 말하는 것이며
			//&.footer_menu는 footer_menu라는 클래스 명을 가진 div를 말하는 것이기 때문이다.

			//&를 쓰는 이유는 div가 많으니까 div중에서 .footer_menu라는 클래스 명을 가진 것을 선택하기 위해 쓰기 위함이다.
			&.footer_menu {
				width: 310px;
				h2 {
					font-size: 15px;
					letter-spacing: 1px;
					a {
						color: #1e3932;
						font-weight: bold;
					}
				}
				ul {
					li {
						a {
							font-size: 13px;
							color: #9a9a9a;
							&:hover {
								color: #cb770a;
							}
						}
					}
				}
			}
			&.footer_contact {
				width: 340px;
				h2 {
					font-weight: bold;
					letter-spacing: 1px;
				}
				address {
					width: 90%;
					font-style: normal;
					//adress태그의 기본 서체 스타일은 기울임체이기 때문에 nomal을 주어 기울이지 않게 설정함
					font-size: 13px;
					color: #9a9a9a;
					margin-bottom: 5px;
				}
			}
			&.footer_follow {
				width: 230px;
				h2 {
					font-weight: bold;
					letter-spacing: 1px;
				}
				// ul {
				// 	li {
				// 		a {
				// 			display: flex;
				// 			justify-content: left;
				// 			//작성시 아무 변화가 없기 때문에 추후 태그 작성후 확인 필요
				// 		}
				// 	}
				// }
			}
			&.footer_subscribe {
				width: 300px;
				h2 {
					font-weight: bold;
					letter-spacing: 1px;
				}
				> div {
					width: 100%;
					display: flex;
					justify-content: space-between;
					//추후 확인 필요
					#subscribe {
						width: 73%;
						height: 25px;
						padding-left: 10px;
						border: none;
						outline: none;
						background-color: #6e6d6d;
						&::placeholder {
							//placeholder는 ::을 써야 제대로 작성이 된다.
							color: #ffffff;
						}
						&:focus {
							outline: none;
							//활성화되었을 떄 (마우스를 올렸을 때) 테두리영역인 outline의 모양이 변경되기 원할 때 사용한다.
							//none이기 때문에 마우스를 올려도 아무 변화가 없다.
						}
					}
					.subscribeBtn {
						display: inline-block;
						//a태그인 inline은 상하마진을 줄 수 없고 좌우마진만 가능하다.
						//a태그는 inline속성이 기본값이기 때문에
						//inline에서 inline-block으로 변화를 주는 이유는 상하마진 때문이다.
						//더불어서, width값을 설정하려면 inline에서 inline-block으로 적용해야한다.
						width: 25%;
						height: 25px;
						background-color: #1e3932;
						color: #ffffff;
						vertical-align: top;
						font-size: 12px;
						line-height: 25px;
						//태그를 가운데 정렬하기 위한 작업으로
						//height값과 line-height값을 동일하게 주어야 한다.
						text-align: center;
						//태그 가운데 정렬
						cursor: pointer;
						//마우스를 올렸을 때 클릭 가능한 모양으로 바뀐다
					}
				}
			}
		}
		> p {
			width: 100%;
			height: 100%;
			font-size: 13px;
			color: #6e6d6d;
			text-align: center;
			//블록속성인 p태그 이므로 width값 100%를 주고
			//그다음에 text-align center를 사용한다.
			letter-spacing: 2px;
			//글자간 사이의 간격
			padding: 50px 0 30px;
		}
	}
}
